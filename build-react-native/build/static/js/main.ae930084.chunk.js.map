{"version":3,"sources":["styles/colors.ts","styles/theme.ts","serviceWorkerRegistration.ts","styles/global.ts","routes/styles.ts","routes/index.tsx","App.tsx","index.tsx"],"names":["theme","colors","backgroundTheme","primaryDark","primaryWhite","primaryYellow","primaryGreen","primaryRed","primaryGray","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","createGlobalStyle","props","Container","styled","div","ReactLoadingContainer","ReactLoading","attrs","color","type","height","width","Login","lazy","Main","PresenceGroup","Presence","ReportsMain","ReportsPerDate","ReportsPerStudent","News","Notifications","RegistrationMain","StudentRegister","TeacherRegister","ModalityRegister","GroupRegister","NewsRegister","NotificationRegister","ListMain","StudentList","TeacherList","ModalityList","GroupList","NewsList","NotificationList","StudentUpdate","TeacherUpdate","GroupUpdate","ModalityUpdate","NewsUpdate","NotificationUpdate","Profile","Loading","Routes","fallback","exact","path","component","App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ae930084.chunk.js","sourcesContent":["export const colors = {\n    backgroundTheme: '#f7f7f7',\n    primaryDark: '#313335',\n    primaryWhite: '#fff',\n    primaryYellow: '#fbd560',\n    primaryGreen: '#8bc28a',\n    primaryRed: '#e63c2c',\n    primaryGray: '#616161'\n};","import { colors } from './colors';\n\nexport const theme = {\n  colors\n};\n\ntype Theme = typeof theme;\n\ndeclare module 'styled-components' {\n  export interface DefaultTheme extends Theme {}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import { createGlobalStyle } from 'styled-components';\nimport teste from '../assets/teste.png'\n\nexport default createGlobalStyle`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      outline: 0;\n    }\n    body {\n      background: ${props => props.theme.colors.backgroundTheme};\n      background-size: cover;\n      color: ${props => props.theme.colors.primaryYellow};\n      -webkit-font-smoothing: antialiased;\n      max-width: 1280px;\n      margin: 0 auto;\n    }\n    ::-webkit-scrollbar {\n  width: 2px;\n  height: 8px;\n}\n/* Track */\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #888;\n}\n/* Handle on hover */\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n}\n    body,\n    input,\n    button {\n      font-family: Poppins, serif;\n      font-size: 16px;\n    }\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    strong {\n      font-weight: bold;\n    }\n    button {\n      cursor: pointer;\n    }\n  `;","import styled from \"styled-components\";\nimport ReactLoading from \"react-loading\";\n\nexport const Container = styled.div``;\n\nexport const ReactLoadingContainer = styled(ReactLoading).attrs((props) => ({\n  color: props.theme.colors.primaryDark,\n  type: \"balls\",\n  height: \"64px\",\n  width: \"64px\",\n}))`\n  transform: translate(50%, -50%);\n  top: 50%;\n  right: 50%;\n  position: fixed;\n`;","import { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Container, ReactLoadingContainer } from './styles';\n\nconst Login = lazy(() => import('../pages/Login'));\nconst Main = lazy(() => import('../pages/Main'));\nconst PresenceGroup = lazy(() => import('../pages/PresenceGroupChoose'));\nconst Presence = lazy(() => import('../pages/Presence'));\nconst ReportsMain = lazy(() => import('../pages/ReportsMain'));\nconst ReportsPerDate = lazy(() => import('../pages/ReportsPerDate'));\nconst ReportsPerStudent = lazy(() => import('../pages/ReportsPerStudent'));\nconst News = lazy(() => import('../pages/News'));\nconst Notifications = lazy(() => import('../pages/Notifications'));\nconst RegistrationMain = lazy(() => import('../pages/RegistrationMain'));\nconst StudentRegister = lazy(() => import('../pages/StudentRegister'));\nconst TeacherRegister = lazy(() => import('../pages/TeacherRegister'));\nconst ModalityRegister = lazy(() => import('../pages/ModalityRegister'));\nconst GroupRegister = lazy(() => import('../pages/GroupRegister'));\nconst NewsRegister = lazy(() => import('../pages/NewsRegister'));\nconst NotificationRegister = lazy(() => import('../pages/NotificationRegister'));\nconst ListMain = lazy(() => import('../pages/ListMain'));\nconst StudentList = lazy(() => import('../pages/StudentList'));\nconst TeacherList = lazy(() => import('../pages/TeacherList'));\nconst ModalityList = lazy(() => import('../pages/ModalityList'));\nconst GroupList = lazy(() => import('../pages/GroupList'));\nconst NewsList = lazy(() => import('../pages/NewsList'));\nconst NotificationList = lazy(() => import('../pages/NotificationList'));\nconst StudentUpdate = lazy(() => import('../pages/StudentUpdate'));\nconst TeacherUpdate = lazy(() => import('../pages/TeacherUpdate'));\nconst GroupUpdate = lazy(() => import('../pages/GroupUpdate'));\nconst ModalityUpdate = lazy(() => import('../pages/ModalityUpdate'));\nconst NewsUpdate = lazy(() => import('../pages/NewsUpdate'));\nconst NotificationUpdate = lazy(() => import('../pages/NotificationUpdate'));\nconst Profile = lazy(() => import('../pages/Profile'));\n\nconst Loading = (\n  <Container>\n    <ReactLoadingContainer />\n  </Container>\n);\n\nconst Routes = () => (\n  <Suspense fallback={Loading}>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/main\" component={Main} />\n      <Route exact path=\"/presenceGroup\" component={PresenceGroup} />\n      <Route exact path=\"/presenceGroup/presence/:id\" component={Presence} />\n      <Route exact path=\"/report\" component={ReportsMain} />\n      <Route exact path=\"/report/date\" component={ReportsPerDate} />\n      <Route exact path=\"/report/student\" component={ReportsPerStudent} />\n      <Route exact path=\"/news\" component={News} />\n      <Route exact path=\"/notifications\" component={Notifications} />\n      <Route exact path=\"/registration\" component={RegistrationMain} />\n      <Route exact path=\"/registration/student\" component={StudentRegister} />\n      <Route exact path=\"/registration/teacher\" component={TeacherRegister} />\n      <Route exact path=\"/registration/modality\" component={ModalityRegister} />\n      <Route exact path=\"/registration/group\" component={GroupRegister} />\n      <Route exact path=\"/registration/news\" component={NewsRegister} />\n      <Route exact path=\"/registration/notifications\" component={NotificationRegister} />\n      <Route exact path=\"/list\" component={ListMain} />\n      <Route exact path=\"/list/student\" component={StudentList} />\n      <Route exact path=\"/list/teacher\" component={TeacherList} />\n      <Route exact path=\"/list/modality\" component={ModalityList} />\n      <Route exact path=\"/list/group\" component={GroupList} />\n      <Route exact path=\"/list/news\" component={NewsList} />\n      <Route exact path=\"/list/notifications\" component={NotificationList} />\n      <Route path=\"/update/student/:id\" component={StudentUpdate} />\n      <Route path=\"/update/teacher/:id\" component={TeacherUpdate} />\n      <Route path=\"/update/group/:id\" component={GroupUpdate} />\n      <Route path=\"/update/modality/:id\" component={ModalityUpdate} />\n      <Route path=\"/update/news/:id\" component={NewsUpdate} />\n      <Route path=\"/update/notification/:id\" component={NotificationUpdate} />\n      <Route exact path=\"/profile\" component={Profile} />\n    </Switch> \n  </Suspense>\n);\n\nexport default Routes;","import { BrowserRouter } from \"react-router-dom\";\n\nimport { ThemeProvider as StyledProvider } from \"styled-components\";\n\nimport GlobalStyle from \"./styles/global\";\nimport Routes from \"./routes\";\nimport { theme } from \"./styles/theme\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <StyledProvider theme={theme}>\n        <GlobalStyle />\n\n        <Routes />\n      </StyledProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}